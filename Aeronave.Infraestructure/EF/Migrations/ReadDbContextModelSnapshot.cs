// <auto-generated />
using System;
using Aeronave.Infraestructure.EF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aeronave.Infraestructure.EF.Migrations
{
    [DbContext(typeof(ReadDbContext))]
    partial class ReadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aeronave.Infraestructure.EF.ReadModel.AeronaveReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CodAeronave")
                        .HasColumnType("int")
                        .HasColumnName("CodAeronave");
                    /*
                    b.Property<Guid?>("ControlAeronaveId")
                        .HasColumnType("uniqueidentifier");
                    */
                    b.Property<string>("EstadoDisponibilidad")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EstadoDisponibilidad");

                    b.Property<Guid>("IdAeronave")
                        .HasMaxLength(40)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdAeronave");

                    b.Property<Guid>("IdAeropuerto")
                        .HasMaxLength(40)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdAeropuerto");
                    /*
                    b.Property<Guid>("IdAsignacionAeronave")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdControlAeronave")
                        .HasColumnType("uniqueidentifier");
                    */
                    b.Property<int>("TotalNroAsientos")
                        .HasColumnType("int")
                        .HasColumnName("TotalNroAsientos");

                    b.HasKey("Id");

                   // b.HasIndex("ControlAeronaveId");

                    b.ToTable("Aeronave");
                });

            modelBuilder.Entity("Aeronave.Infraestructure.EF.ReadModel.AsignacionAeronaveReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EstadoAsignacion")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EstadoAsignacion");

                    b.Property<Guid>("IdAeronave")
                        .HasMaxLength(40)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdAeronave");

                    b.Property<Guid>("IdAsignacionAeronave")
                        .HasMaxLength(40)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdAsignacionAeronave");

                    b.Property<Guid>("IdVuelo")
                        .HasMaxLength(40)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdVuelo");

                    b.Property<int>("NroAsientosAeronave")
                        .HasColumnType("int")
                        .HasColumnName("NroAsientosAeronave");

                    b.HasKey("Id");

                    b.ToTable("AsignacionAeronave");
                });

            modelBuilder.Entity("Aeronave.Infraestructure.EF.ReadModel.ControlAeronaveReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AereopuertoEstacionamiento")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("AereopuertoEstacionamiento");

                    b.Property<int>("AsientosAsignados")
                        .HasColumnType("int")
                        .HasColumnName("AsientosAsignados");

                    b.Property<decimal>("CapTanqueCombustible")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("CapTanqueCombustible");

                    b.Property<decimal>("CapacidadCarga")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("CapacidadCarga");

                    b.Property<string>("EstadoFuncionalAeronave")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("EstadoFuncionalAeronave");

                    b.Property<Guid>("IdAeronave")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdControlAeronave")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Marca")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Marca");

                    b.Property<string>("Modelo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Modelo");

                    b.HasKey("Id");

                    b.ToTable("ControlAeronave");
                });

            modelBuilder.Entity("Aeronave.Infraestructure.EF.ReadModel.AeronaveReadModel", b =>
                {
                    b.HasOne("Aeronave.Infraestructure.EF.ReadModel.ControlAeronaveReadModel", "ControlAeronave")
                        .WithMany();
                        //.HasForeignKey("ControlAeronaveId");

                    b.Navigation("ControlAeronave");
                });
#pragma warning restore 612, 618
        }
    }
}
